   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"stm32f10x_gpio.c"
  21              	.Ltext0:
  22              		.align	2
  23              		.global	GPIO_Init
  24              		.thumb
  25              		.thumb_func
  27              	GPIO_Init:
  28              	.LFB25:
  29              		.file 1 "stm32lib/src/stm32f10x_gpio.c"
   1:stm32lib/src/stm32f10x_gpio.c **** /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
   2:stm32lib/src/stm32f10x_gpio.c **** * File Name          : stm32f10x_gpio.c
   3:stm32lib/src/stm32f10x_gpio.c **** * Author             : MCD Application Team
   4:stm32lib/src/stm32f10x_gpio.c **** * Version            : V2.0.2
   5:stm32lib/src/stm32f10x_gpio.c **** * Date               : 07/11/2008
   6:stm32lib/src/stm32f10x_gpio.c **** * Description        : This file provides all the GPIO firmware functions.
   7:stm32lib/src/stm32f10x_gpio.c **** ********************************************************************************
   8:stm32lib/src/stm32f10x_gpio.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:stm32lib/src/stm32f10x_gpio.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:stm32lib/src/stm32f10x_gpio.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:stm32lib/src/stm32f10x_gpio.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:stm32lib/src/stm32f10x_gpio.c **** * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:stm32lib/src/stm32f10x_gpio.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
  15:stm32lib/src/stm32f10x_gpio.c **** 
  16:stm32lib/src/stm32f10x_gpio.c **** /* Includes ------------------------------------------------------------------*/
  17:stm32lib/src/stm32f10x_gpio.c **** #include "stm32f10x_gpio.h"
  18:stm32lib/src/stm32f10x_gpio.c **** #include "stm32f10x_rcc.h"
  19:stm32lib/src/stm32f10x_gpio.c **** 
  20:stm32lib/src/stm32f10x_gpio.c **** /* Private typedef -----------------------------------------------------------*/
  21:stm32lib/src/stm32f10x_gpio.c **** /* Private define ------------------------------------------------------------*/
  22:stm32lib/src/stm32f10x_gpio.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  23:stm32lib/src/stm32f10x_gpio.c **** #define AFIO_OFFSET                 (AFIO_BASE - PERIPH_BASE)
  24:stm32lib/src/stm32f10x_gpio.c **** 
  25:stm32lib/src/stm32f10x_gpio.c **** /* --- EVENTCR Register ---*/
  26:stm32lib/src/stm32f10x_gpio.c **** /* Alias word address of EVOE bit */
  27:stm32lib/src/stm32f10x_gpio.c **** #define EVCR_OFFSET                 (AFIO_OFFSET + 0x00)
  28:stm32lib/src/stm32f10x_gpio.c **** #define EVOE_BitNumber              ((u8)0x07)
  29:stm32lib/src/stm32f10x_gpio.c **** #define EVCR_EVOE_BB                (PERIPH_BB_BASE + (EVCR_OFFSET * 32) + (EVOE_BitNumber * 4))
  30:stm32lib/src/stm32f10x_gpio.c **** 
  31:stm32lib/src/stm32f10x_gpio.c **** #define EVCR_PORTPINCONFIG_MASK     ((u16)0xFF80)
  32:stm32lib/src/stm32f10x_gpio.c **** #define LSB_MASK                    ((u16)0xFFFF)
  33:stm32lib/src/stm32f10x_gpio.c **** #define DBGAFR_POSITION_MASK        ((u32)0x000F0000)
  34:stm32lib/src/stm32f10x_gpio.c **** #define DBGAFR_SWJCFG_MASK          ((u32)0xF0FFFFFF)
  35:stm32lib/src/stm32f10x_gpio.c **** #define DBGAFR_LOCATION_MASK        ((u32)0x00200000)
  36:stm32lib/src/stm32f10x_gpio.c **** #define DBGAFR_NUMBITS_MASK         ((u32)0x00100000)
  37:stm32lib/src/stm32f10x_gpio.c **** 
  38:stm32lib/src/stm32f10x_gpio.c **** /* Private macro -------------------------------------------------------------*/
  39:stm32lib/src/stm32f10x_gpio.c **** /* Private variables ---------------------------------------------------------*/
  40:stm32lib/src/stm32f10x_gpio.c **** /* Private function prototypes -----------------------------------------------*/
  41:stm32lib/src/stm32f10x_gpio.c **** /* Private functions ---------------------------------------------------------*/
  42:stm32lib/src/stm32f10x_gpio.c **** 
  43:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
  44:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_DeInit
  45:stm32lib/src/stm32f10x_gpio.c **** * Description    : Deinitializes the GPIOx peripheral registers to their default
  46:stm32lib/src/stm32f10x_gpio.c **** *                  reset values.
  47:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
  48:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
  49:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
  50:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
  51:stm32lib/src/stm32f10x_gpio.c **** void GPIO_DeInit(GPIO_TypeDef* GPIOx)
  52:stm32lib/src/stm32f10x_gpio.c **** {
  53:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
  54:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
  55:stm32lib/src/stm32f10x_gpio.c ****   
  56:stm32lib/src/stm32f10x_gpio.c ****   switch (*(u32*)&GPIOx)
  57:stm32lib/src/stm32f10x_gpio.c ****   {
  58:stm32lib/src/stm32f10x_gpio.c ****     case GPIOA_BASE:
  59:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, ENABLE);
  60:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOA, DISABLE);
  61:stm32lib/src/stm32f10x_gpio.c ****       break;
  62:stm32lib/src/stm32f10x_gpio.c **** 
  63:stm32lib/src/stm32f10x_gpio.c ****     case GPIOB_BASE:
  64:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, ENABLE);
  65:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOB, DISABLE);
  66:stm32lib/src/stm32f10x_gpio.c ****       break;
  67:stm32lib/src/stm32f10x_gpio.c **** 
  68:stm32lib/src/stm32f10x_gpio.c ****     case GPIOC_BASE:
  69:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, ENABLE);
  70:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOC, DISABLE);
  71:stm32lib/src/stm32f10x_gpio.c ****       break;
  72:stm32lib/src/stm32f10x_gpio.c **** 
  73:stm32lib/src/stm32f10x_gpio.c ****     case GPIOD_BASE:
  74:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, ENABLE);
  75:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOD, DISABLE);
  76:stm32lib/src/stm32f10x_gpio.c ****       break;
  77:stm32lib/src/stm32f10x_gpio.c ****       
  78:stm32lib/src/stm32f10x_gpio.c ****     case GPIOE_BASE:
  79:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, ENABLE);
  80:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOE, DISABLE);
  81:stm32lib/src/stm32f10x_gpio.c ****       break; 
  82:stm32lib/src/stm32f10x_gpio.c **** 
  83:stm32lib/src/stm32f10x_gpio.c ****     case GPIOF_BASE:
  84:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, ENABLE);
  85:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOF, DISABLE);
  86:stm32lib/src/stm32f10x_gpio.c ****       break;
  87:stm32lib/src/stm32f10x_gpio.c **** 
  88:stm32lib/src/stm32f10x_gpio.c ****     case GPIOG_BASE:
  89:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, ENABLE);
  90:stm32lib/src/stm32f10x_gpio.c ****       RCC_APB2PeriphResetCmd(RCC_APB2Periph_GPIOG, DISABLE);
  91:stm32lib/src/stm32f10x_gpio.c ****       break;                       
  92:stm32lib/src/stm32f10x_gpio.c **** 
  93:stm32lib/src/stm32f10x_gpio.c ****     default:
  94:stm32lib/src/stm32f10x_gpio.c ****       break;
  95:stm32lib/src/stm32f10x_gpio.c ****   }
  96:stm32lib/src/stm32f10x_gpio.c **** }
  97:stm32lib/src/stm32f10x_gpio.c **** 
  98:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
  99:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_AFIODeInit
 100:stm32lib/src/stm32f10x_gpio.c **** * Description    : Deinitializes the Alternate Functions (remap, event control
 101:stm32lib/src/stm32f10x_gpio.c **** *                  and EXTI configuration) registers to their default reset
 102:stm32lib/src/stm32f10x_gpio.c **** *                  values.
 103:stm32lib/src/stm32f10x_gpio.c **** * Input          : None
 104:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 105:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 106:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 107:stm32lib/src/stm32f10x_gpio.c **** void GPIO_AFIODeInit(void)
 108:stm32lib/src/stm32f10x_gpio.c **** {
 109:stm32lib/src/stm32f10x_gpio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, ENABLE);
 110:stm32lib/src/stm32f10x_gpio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_AFIO, DISABLE);
 111:stm32lib/src/stm32f10x_gpio.c **** }
 112:stm32lib/src/stm32f10x_gpio.c **** 
 113:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 114:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_Init
 115:stm32lib/src/stm32f10x_gpio.c **** * Description    : Initializes the GPIOx peripheral according to the specified
 116:stm32lib/src/stm32f10x_gpio.c **** *                  parameters in the GPIO_InitStruct.
 117:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 118:stm32lib/src/stm32f10x_gpio.c **** *                  - GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
 119:stm32lib/src/stm32f10x_gpio.c **** *                    contains the configuration information for the specified GPIO
 120:stm32lib/src/stm32f10x_gpio.c **** *                    peripheral.
 121:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 122:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 123:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 124:stm32lib/src/stm32f10x_gpio.c **** void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
 125:stm32lib/src/stm32f10x_gpio.c **** {
  30              		.loc 1 125 0
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
 126:stm32lib/src/stm32f10x_gpio.c ****   u32 currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
 127:stm32lib/src/stm32f10x_gpio.c ****   u32 tmpreg = 0x00, pinmask = 0x00;
 128:stm32lib/src/stm32f10x_gpio.c **** 
 129:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 130:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 131:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 132:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
 133:stm32lib/src/stm32f10x_gpio.c ****   
 134:stm32lib/src/stm32f10x_gpio.c **** /*---------------------------- GPIO Mode Configuration -----------------------*/
 135:stm32lib/src/stm32f10x_gpio.c ****   currentmode = ((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x0F);
  36              		.loc 1 135 0
  37 0002 CD78     		ldrb	r5, [r1, #3]	@ zero_extendqisi2
 136:stm32lib/src/stm32f10x_gpio.c **** 
 137:stm32lib/src/stm32f10x_gpio.c ****   if ((((u32)GPIO_InitStruct->GPIO_Mode) & ((u32)0x10)) != 0x00)
 138:stm32lib/src/stm32f10x_gpio.c ****   { 
 139:stm32lib/src/stm32f10x_gpio.c ****     /* Check the parameters */
 140:stm32lib/src/stm32f10x_gpio.c ****     assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 141:stm32lib/src/stm32f10x_gpio.c ****     /* Output mode */
 142:stm32lib/src/stm32f10x_gpio.c ****     currentmode |= (u32)GPIO_InitStruct->GPIO_Speed;
 143:stm32lib/src/stm32f10x_gpio.c ****   }
 144:stm32lib/src/stm32f10x_gpio.c **** 
 145:stm32lib/src/stm32f10x_gpio.c **** /*---------------------------- GPIO CRL Configuration ------------------------*/
 146:stm32lib/src/stm32f10x_gpio.c ****   /* Configure the eight low port pins */
 147:stm32lib/src/stm32f10x_gpio.c ****   if (((u32)GPIO_InitStruct->GPIO_Pin & ((u32)0x00FF)) != 0x00)
  38              		.loc 1 147 0
  39 0004 0E88     		ldrh	r6, [r1, #0]
  40              		.loc 1 137 0
  41 0006 15F0100F 		tst	r5, #16
  42              		.loc 1 142 0
  43 000a 18BF     		it	ne
  44 000c 8B78     		ldrbne	r3, [r1, #2]	@ zero_extendqisi2
  45              		.loc 1 135 0
  46 000e 05F00F07 		and	r7, r5, #15
  47              	.LVL1:
  48              		.loc 1 142 0
  49 0012 18BF     		it	ne
  50 0014 1F43     		orrne	r7, r7, r3
  51              		.loc 1 147 0
  52 0016 16F0FF0F 		tst	r6, #255
  53 001a 20D0     		beq	.L3
 148:stm32lib/src/stm32f10x_gpio.c ****   {
 149:stm32lib/src/stm32f10x_gpio.c ****     tmpreg = GPIOx->CRL;
  54              		.loc 1 149 0
  55 001c 0468     		ldr	r4, [r0, #0]
  56              	.LVL2:
  57 001e 4FF0000C 		mov	ip, #0
  58              	.LVL3:
  59              	.L6:
 150:stm32lib/src/stm32f10x_gpio.c **** 
 151:stm32lib/src/stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 152:stm32lib/src/stm32f10x_gpio.c ****     {
 153:stm32lib/src/stm32f10x_gpio.c ****       pos = ((u32)0x01) << pinpos;
  60              		.loc 1 153 0
  61 0022 0123     		movs	r3, #1
  62              	.LVL4:
  63 0024 03FA0CF3 		lsl	r3, r3, ip
  64              	.LVL5:
 154:stm32lib/src/stm32f10x_gpio.c ****       /* Get the port pins position */
 155:stm32lib/src/stm32f10x_gpio.c ****       currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
  65              		.loc 1 155 0
  66 0028 03EA0601 		and	r1, r3, r6
  67              	.LVL6:
 156:stm32lib/src/stm32f10x_gpio.c **** 
 157:stm32lib/src/stm32f10x_gpio.c ****       if (currentpin == pos)
  68              		.loc 1 157 0
  69 002c 9942     		cmp	r1, r3
  70 002e 10D1     		bne	.L4
 158:stm32lib/src/stm32f10x_gpio.c ****       {
 159:stm32lib/src/stm32f10x_gpio.c ****         pos = pinpos << 2;
 160:stm32lib/src/stm32f10x_gpio.c ****         /* Clear the corresponding low control register bits */
 161:stm32lib/src/stm32f10x_gpio.c ****         pinmask = ((u32)0x0F) << pos;
  71              		.loc 1 161 0
  72 0030 4FEA8C02 		lsl	r2, ip, #2
 162:stm32lib/src/stm32f10x_gpio.c ****         tmpreg &= ~pinmask;
  73              		.loc 1 162 0
  74 0034 0F23     		movs	r3, #15
  75              	.LVL7:
  76 0036 9340     		lsls	r3, r3, r2
 163:stm32lib/src/stm32f10x_gpio.c **** 
 164:stm32lib/src/stm32f10x_gpio.c ****         /* Write the mode configuration in the corresponding bits */
 165:stm32lib/src/stm32f10x_gpio.c ****         tmpreg |= (currentmode << pos);
  77              		.loc 1 165 0
  78 0038 17FA02F2 		lsls	r2, r7, r2
  79              		.loc 1 162 0
  80 003c 24EA0303 		bic	r3, r4, r3
  81              	.LVL8:
 166:stm32lib/src/stm32f10x_gpio.c **** 
 167:stm32lib/src/stm32f10x_gpio.c ****         /* Reset the corresponding ODR bit */
 168:stm32lib/src/stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
  82              		.loc 1 168 0
  83 0040 282D     		cmp	r5, #40
  84              		.loc 1 165 0
  85 0042 43EA0204 		orr	r4, r3, r2
  86              	.LVL9:
  87              		.loc 1 168 0
  88 0046 01D1     		bne	.L5
 169:stm32lib/src/stm32f10x_gpio.c ****         {
 170:stm32lib/src/stm32f10x_gpio.c ****           GPIOx->BRR = (((u32)0x01) << pinpos);
  89              		.loc 1 170 0
  90 0048 4161     		str	r1, [r0, #20]
  91 004a 02E0     		b	.L4
  92              	.L5:
 171:stm32lib/src/stm32f10x_gpio.c ****         }
 172:stm32lib/src/stm32f10x_gpio.c ****         else
 173:stm32lib/src/stm32f10x_gpio.c ****         {
 174:stm32lib/src/stm32f10x_gpio.c ****           /* Set the corresponding ODR bit */
 175:stm32lib/src/stm32f10x_gpio.c ****           if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
  93              		.loc 1 175 0
  94 004c 482D     		cmp	r5, #72
 176:stm32lib/src/stm32f10x_gpio.c ****           {
 177:stm32lib/src/stm32f10x_gpio.c ****             GPIOx->BSRR = (((u32)0x01) << pinpos);
  95              		.loc 1 177 0
  96 004e 08BF     		it	eq
  97 0050 0161     		streq	r1, [r0, #16]
  98              	.LVL10:
  99              	.L4:
 100              		.loc 1 151 0
 101 0052 0CF1010C 		add	ip, ip, #1
 102 0056 BCF1080F 		cmp	ip, #8
 103 005a E2D1     		bne	.L6
 178:stm32lib/src/stm32f10x_gpio.c ****           }
 179:stm32lib/src/stm32f10x_gpio.c ****         }
 180:stm32lib/src/stm32f10x_gpio.c ****       }
 181:stm32lib/src/stm32f10x_gpio.c ****     }
 182:stm32lib/src/stm32f10x_gpio.c ****     GPIOx->CRL = tmpreg;
 104              		.loc 1 182 0
 105 005c 0460     		str	r4, [r0, #0]
 106              	.LVL11:
 107              	.L3:
 183:stm32lib/src/stm32f10x_gpio.c ****   }
 184:stm32lib/src/stm32f10x_gpio.c **** 
 185:stm32lib/src/stm32f10x_gpio.c **** /*---------------------------- GPIO CRH Configuration ------------------------*/
 186:stm32lib/src/stm32f10x_gpio.c ****   /* Configure the eight high port pins */
 187:stm32lib/src/stm32f10x_gpio.c ****   if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 108              		.loc 1 187 0
 109 005e FF2E     		cmp	r6, #255
 110 0060 21D9     		bls	.L11
 188:stm32lib/src/stm32f10x_gpio.c ****   {
 189:stm32lib/src/stm32f10x_gpio.c ****     tmpreg = GPIOx->CRH;
 111              		.loc 1 189 0
 112 0062 4468     		ldr	r4, [r0, #4]
 113              	.LVL12:
 114 0064 4FF0000C 		mov	ip, #0
 115              	.LVL13:
 116              	.L10:
 190:stm32lib/src/stm32f10x_gpio.c ****     for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 191:stm32lib/src/stm32f10x_gpio.c ****     {
 192:stm32lib/src/stm32f10x_gpio.c ****       pos = (((u32)0x01) << (pinpos + 0x08));
 117              		.loc 1 192 0
 118 0068 0123     		movs	r3, #1
 119              	.LVL14:
 120 006a 0CF10802 		add	r2, ip, #8
 121 006e 9340     		lsls	r3, r3, r2
 122              	.LVL15:
 193:stm32lib/src/stm32f10x_gpio.c ****       /* Get the port pins position */
 194:stm32lib/src/stm32f10x_gpio.c ****       currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 123              		.loc 1 194 0
 124 0070 03EA0601 		and	r1, r3, r6
 125              	.LVL16:
 195:stm32lib/src/stm32f10x_gpio.c ****       if (currentpin == pos)
 126              		.loc 1 195 0
 127 0074 9942     		cmp	r1, r3
 128 0076 10D1     		bne	.L8
 196:stm32lib/src/stm32f10x_gpio.c ****       {
 197:stm32lib/src/stm32f10x_gpio.c ****         pos = pinpos << 2;
 198:stm32lib/src/stm32f10x_gpio.c ****         /* Clear the corresponding high control register bits */
 199:stm32lib/src/stm32f10x_gpio.c ****         pinmask = ((u32)0x0F) << pos;
 129              		.loc 1 199 0
 130 0078 4FEA8C02 		lsl	r2, ip, #2
 200:stm32lib/src/stm32f10x_gpio.c ****         tmpreg &= ~pinmask;
 131              		.loc 1 200 0
 132 007c 0F23     		movs	r3, #15
 133              	.LVL17:
 134 007e 9340     		lsls	r3, r3, r2
 201:stm32lib/src/stm32f10x_gpio.c **** 
 202:stm32lib/src/stm32f10x_gpio.c ****         /* Write the mode configuration in the corresponding bits */
 203:stm32lib/src/stm32f10x_gpio.c ****         tmpreg |= (currentmode << pos);
 135              		.loc 1 203 0
 136 0080 17FA02F2 		lsls	r2, r7, r2
 137              		.loc 1 200 0
 138 0084 24EA0303 		bic	r3, r4, r3
 139              	.LVL18:
 204:stm32lib/src/stm32f10x_gpio.c **** 
 205:stm32lib/src/stm32f10x_gpio.c ****         /* Reset the corresponding ODR bit */
 206:stm32lib/src/stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 140              		.loc 1 206 0
 141 0088 282D     		cmp	r5, #40
 142              		.loc 1 203 0
 143 008a 43EA0204 		orr	r4, r3, r2
 144              	.LVL19:
 145              		.loc 1 206 0
 146 008e 01D1     		bne	.L9
 207:stm32lib/src/stm32f10x_gpio.c ****         {
 208:stm32lib/src/stm32f10x_gpio.c ****           GPIOx->BRR = (((u32)0x01) << (pinpos + 0x08));
 147              		.loc 1 208 0
 148 0090 4161     		str	r1, [r0, #20]
 149 0092 02E0     		b	.L8
 150              	.L9:
 209:stm32lib/src/stm32f10x_gpio.c ****         }
 210:stm32lib/src/stm32f10x_gpio.c ****         /* Set the corresponding ODR bit */
 211:stm32lib/src/stm32f10x_gpio.c ****         if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 151              		.loc 1 211 0
 152 0094 482D     		cmp	r5, #72
 212:stm32lib/src/stm32f10x_gpio.c ****         {
 213:stm32lib/src/stm32f10x_gpio.c ****           GPIOx->BSRR = (((u32)0x01) << (pinpos + 0x08));
 153              		.loc 1 213 0
 154 0096 08BF     		it	eq
 155 0098 0161     		streq	r1, [r0, #16]
 156              	.LVL20:
 157              	.L8:
 158              		.loc 1 190 0
 159 009a 0CF1010C 		add	ip, ip, #1
 160 009e BCF1080F 		cmp	ip, #8
 161 00a2 E1D1     		bne	.L10
 214:stm32lib/src/stm32f10x_gpio.c ****         }
 215:stm32lib/src/stm32f10x_gpio.c ****       }
 216:stm32lib/src/stm32f10x_gpio.c ****     }
 217:stm32lib/src/stm32f10x_gpio.c ****     GPIOx->CRH = tmpreg;
 162              		.loc 1 217 0
 163 00a4 4460     		str	r4, [r0, #4]
 164              	.LVL21:
 165              	.L11:
 218:stm32lib/src/stm32f10x_gpio.c ****   }
 219:stm32lib/src/stm32f10x_gpio.c **** }
 166              		.loc 1 219 0
 167 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 168              	.LFE25:
 170              		.align	2
 171              		.global	GPIO_StructInit
 172              		.thumb
 173              		.thumb_func
 175              	GPIO_StructInit:
 176              	.LFB26:
 220:stm32lib/src/stm32f10x_gpio.c **** 
 221:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 222:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_StructInit
 223:stm32lib/src/stm32f10x_gpio.c **** * Description    : Fills each GPIO_InitStruct member with its default value.
 224:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIO_InitStruct : pointer to a GPIO_InitTypeDef structure
 225:stm32lib/src/stm32f10x_gpio.c **** *                    which will be initialized.
 226:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 227:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 228:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 229:stm32lib/src/stm32f10x_gpio.c **** void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
 230:stm32lib/src/stm32f10x_gpio.c **** {
 177              		.loc 1 230 0
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 0, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181              	.LVL22:
 231:stm32lib/src/stm32f10x_gpio.c ****   /* Reset GPIO init structure parameters values */
 232:stm32lib/src/stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
 182              		.loc 1 232 0
 183 00a8 4FF0FF33 		mov	r3, #-1	@ movhi
 184 00ac 0380     		strh	r3, [r0, #0]	@ movhi
 233:stm32lib/src/stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
 185              		.loc 1 233 0
 186 00ae 0223     		movs	r3, #2
 187 00b0 8370     		strb	r3, [r0, #2]
 234:stm32lib/src/stm32f10x_gpio.c ****   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN_FLOATING;
 188              		.loc 1 234 0
 189 00b2 DB18     		adds	r3, r3, r3
 190 00b4 C370     		strb	r3, [r0, #3]
 235:stm32lib/src/stm32f10x_gpio.c **** }
 191              		.loc 1 235 0
 192 00b6 7047     		bx	lr
 193              	.LFE26:
 195              		.align	2
 196              		.global	GPIO_ReadInputDataBit
 197              		.thumb
 198              		.thumb_func
 200              	GPIO_ReadInputDataBit:
 201              	.LFB27:
 236:stm32lib/src/stm32f10x_gpio.c **** 
 237:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 238:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_ReadInputDataBit
 239:stm32lib/src/stm32f10x_gpio.c **** * Description    : Reads the specified input port pin.
 240:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 241:stm32lib/src/stm32f10x_gpio.c **** *                : - GPIO_Pin:  specifies the port bit to read.
 242:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be GPIO_Pin_x where x can be (0..15).
 243:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 244:stm32lib/src/stm32f10x_gpio.c **** * Return         : The input port pin value.
 245:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 246:stm32lib/src/stm32f10x_gpio.c **** u8 GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 247:stm32lib/src/stm32f10x_gpio.c **** {
 202              		.loc 1 247 0
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL23:
 248:stm32lib/src/stm32f10x_gpio.c ****   u8 bitstatus = 0x00;
 249:stm32lib/src/stm32f10x_gpio.c ****   
 250:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 251:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 252:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
 253:stm32lib/src/stm32f10x_gpio.c ****   
 254:stm32lib/src/stm32f10x_gpio.c ****   if ((GPIOx->IDR & GPIO_Pin) != (u32)Bit_RESET)
 207              		.loc 1 254 0
 208 00b8 8368     		ldr	r3, [r0, #8]
 209 00ba 1942     		tst	r1, r3
 255:stm32lib/src/stm32f10x_gpio.c ****   {
 256:stm32lib/src/stm32f10x_gpio.c ****     bitstatus = (u8)Bit_SET;
 257:stm32lib/src/stm32f10x_gpio.c ****   }
 258:stm32lib/src/stm32f10x_gpio.c ****   else
 259:stm32lib/src/stm32f10x_gpio.c ****   {
 260:stm32lib/src/stm32f10x_gpio.c ****     bitstatus = (u8)Bit_RESET;
 261:stm32lib/src/stm32f10x_gpio.c ****   }
 262:stm32lib/src/stm32f10x_gpio.c ****   return bitstatus;
 263:stm32lib/src/stm32f10x_gpio.c **** }
 210              		.loc 1 263 0
 211 00bc 0CBF     		ite	eq
 212 00be 0020     		moveq	r0, #0
 213 00c0 0120     		movne	r0, #1
 214              	.LVL24:
 215 00c2 7047     		bx	lr
 216              	.LFE27:
 218              		.align	2
 219              		.global	GPIO_ReadInputData
 220              		.thumb
 221              		.thumb_func
 223              	GPIO_ReadInputData:
 224              	.LFB28:
 264:stm32lib/src/stm32f10x_gpio.c **** 
 265:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 266:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_ReadInputData
 267:stm32lib/src/stm32f10x_gpio.c **** * Description    : Reads the specified GPIO input data port.
 268:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 269:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 270:stm32lib/src/stm32f10x_gpio.c **** * Return         : GPIO input data port value.
 271:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 272:stm32lib/src/stm32f10x_gpio.c **** u16 GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
 273:stm32lib/src/stm32f10x_gpio.c **** {
 225              		.loc 1 273 0
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		@ link register save eliminated.
 229              	.LVL25:
 274:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 275:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 276:stm32lib/src/stm32f10x_gpio.c ****   
 277:stm32lib/src/stm32f10x_gpio.c ****   return ((u16)GPIOx->IDR);
 230              		.loc 1 277 0
 231 00c4 8068     		ldr	r0, [r0, #8]
 232              	.LVL26:
 278:stm32lib/src/stm32f10x_gpio.c **** }
 233              		.loc 1 278 0
 234 00c6 80B2     		uxth	r0, r0
 235 00c8 7047     		bx	lr
 236              	.LFE28:
 238 00ca 00BF     		.align	2
 239              		.global	GPIO_ReadOutputDataBit
 240              		.thumb
 241              		.thumb_func
 243              	GPIO_ReadOutputDataBit:
 244              	.LFB29:
 279:stm32lib/src/stm32f10x_gpio.c **** 
 280:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 281:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_ReadOutputDataBit
 282:stm32lib/src/stm32f10x_gpio.c **** * Description    : Reads the specified output data port bit.
 283:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 284:stm32lib/src/stm32f10x_gpio.c **** *                : - GPIO_Pin:  specifies the port bit to read.
 285:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be GPIO_Pin_x where x can be (0..15).
 286:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 287:stm32lib/src/stm32f10x_gpio.c **** * Return         : The output port pin value.
 288:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 289:stm32lib/src/stm32f10x_gpio.c **** u8 GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 290:stm32lib/src/stm32f10x_gpio.c **** {
 245              		.loc 1 290 0
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL27:
 291:stm32lib/src/stm32f10x_gpio.c ****   u8 bitstatus = 0x00;
 292:stm32lib/src/stm32f10x_gpio.c **** 
 293:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 294:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 295:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin)); 
 296:stm32lib/src/stm32f10x_gpio.c ****   
 297:stm32lib/src/stm32f10x_gpio.c ****   if ((GPIOx->ODR & GPIO_Pin) != (u32)Bit_RESET)
 250              		.loc 1 297 0
 251 00cc C368     		ldr	r3, [r0, #12]
 252 00ce 1942     		tst	r1, r3
 298:stm32lib/src/stm32f10x_gpio.c ****   {
 299:stm32lib/src/stm32f10x_gpio.c ****     bitstatus = (u8)Bit_SET;
 300:stm32lib/src/stm32f10x_gpio.c ****   }
 301:stm32lib/src/stm32f10x_gpio.c ****   else
 302:stm32lib/src/stm32f10x_gpio.c ****   {
 303:stm32lib/src/stm32f10x_gpio.c ****     bitstatus = (u8)Bit_RESET;
 304:stm32lib/src/stm32f10x_gpio.c ****   }
 305:stm32lib/src/stm32f10x_gpio.c ****   return bitstatus;
 306:stm32lib/src/stm32f10x_gpio.c **** }
 253              		.loc 1 306 0
 254 00d0 0CBF     		ite	eq
 255 00d2 0020     		moveq	r0, #0
 256 00d4 0120     		movne	r0, #1
 257              	.LVL28:
 258 00d6 7047     		bx	lr
 259              	.LFE29:
 261              		.align	2
 262              		.global	GPIO_ReadOutputData
 263              		.thumb
 264              		.thumb_func
 266              	GPIO_ReadOutputData:
 267              	.LFB30:
 307:stm32lib/src/stm32f10x_gpio.c **** 
 308:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 309:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_ReadOutputData
 310:stm32lib/src/stm32f10x_gpio.c **** * Description    : Reads the specified GPIO output data port.
 311:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 312:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 313:stm32lib/src/stm32f10x_gpio.c **** * Return         : GPIO output data port value.
 314:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 315:stm32lib/src/stm32f10x_gpio.c **** u16 GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
 316:stm32lib/src/stm32f10x_gpio.c **** {
 268              		.loc 1 316 0
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL29:
 317:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 318:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 319:stm32lib/src/stm32f10x_gpio.c ****     
 320:stm32lib/src/stm32f10x_gpio.c ****   return ((u16)GPIOx->ODR);
 273              		.loc 1 320 0
 274 00d8 C068     		ldr	r0, [r0, #12]
 275              	.LVL30:
 321:stm32lib/src/stm32f10x_gpio.c **** }
 276              		.loc 1 321 0
 277 00da 80B2     		uxth	r0, r0
 278 00dc 7047     		bx	lr
 279              	.LFE30:
 281 00de 00BF     		.align	2
 282              		.global	GPIO_SetBits
 283              		.thumb
 284              		.thumb_func
 286              	GPIO_SetBits:
 287              	.LFB31:
 322:stm32lib/src/stm32f10x_gpio.c **** 
 323:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 324:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_SetBits
 325:stm32lib/src/stm32f10x_gpio.c **** * Description    : Sets the selected data port bits.
 326:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 327:stm32lib/src/stm32f10x_gpio.c **** *                  - GPIO_Pin: specifies the port bits to be written.
 328:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be any combination of GPIO_Pin_x where 
 329:stm32lib/src/stm32f10x_gpio.c **** *                    x can be (0..15).
 330:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 331:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 332:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 333:stm32lib/src/stm32f10x_gpio.c **** void GPIO_SetBits(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 334:stm32lib/src/stm32f10x_gpio.c **** {
 288              		.loc 1 334 0
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              		@ link register save eliminated.
 292              	.LVL31:
 335:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 336:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 337:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 338:stm32lib/src/stm32f10x_gpio.c ****   
 339:stm32lib/src/stm32f10x_gpio.c ****   GPIOx->BSRR = GPIO_Pin;
 293              		.loc 1 339 0
 294 00e0 0161     		str	r1, [r0, #16]
 340:stm32lib/src/stm32f10x_gpio.c **** }
 295              		.loc 1 340 0
 296 00e2 7047     		bx	lr
 297              	.LFE31:
 299              		.align	2
 300              		.global	GPIO_ResetBits
 301              		.thumb
 302              		.thumb_func
 304              	GPIO_ResetBits:
 305              	.LFB32:
 341:stm32lib/src/stm32f10x_gpio.c **** 
 342:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 343:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_ResetBits
 344:stm32lib/src/stm32f10x_gpio.c **** * Description    : Clears the selected data port bits.
 345:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 346:stm32lib/src/stm32f10x_gpio.c **** *                  - GPIO_Pin: specifies the port bits to be written.
 347:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be any combination of GPIO_Pin_x where 
 348:stm32lib/src/stm32f10x_gpio.c **** *                    x can be (0..15).
 349:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 350:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 351:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 352:stm32lib/src/stm32f10x_gpio.c **** void GPIO_ResetBits(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 353:stm32lib/src/stm32f10x_gpio.c **** {
 306              		.loc 1 353 0
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310              	.LVL32:
 354:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 355:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 356:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 357:stm32lib/src/stm32f10x_gpio.c ****   
 358:stm32lib/src/stm32f10x_gpio.c ****   GPIOx->BRR = GPIO_Pin;
 311              		.loc 1 358 0
 312 00e4 4161     		str	r1, [r0, #20]
 359:stm32lib/src/stm32f10x_gpio.c **** }
 313              		.loc 1 359 0
 314 00e6 7047     		bx	lr
 315              	.LFE32:
 317              		.align	2
 318              		.global	GPIO_WriteBit
 319              		.thumb
 320              		.thumb_func
 322              	GPIO_WriteBit:
 323              	.LFB33:
 360:stm32lib/src/stm32f10x_gpio.c **** 
 361:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 362:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_WriteBit
 363:stm32lib/src/stm32f10x_gpio.c **** * Description    : Sets or clears the selected data port bit.
 364:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 365:stm32lib/src/stm32f10x_gpio.c **** *                  - GPIO_Pin: specifies the port bit to be written.
 366:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be one of GPIO_Pin_x where x can be (0..15).
 367:stm32lib/src/stm32f10x_gpio.c **** *                  - BitVal: specifies the value to be written to the selected bit.
 368:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be one of the BitAction enum values:
 369:stm32lib/src/stm32f10x_gpio.c **** *                       - Bit_RESET: to clear the port pin
 370:stm32lib/src/stm32f10x_gpio.c **** *                       - Bit_SET: to set the port pin
 371:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 372:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 373:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 374:stm32lib/src/stm32f10x_gpio.c **** void GPIO_WriteBit(GPIO_TypeDef* GPIOx, u16 GPIO_Pin, BitAction BitVal)
 375:stm32lib/src/stm32f10x_gpio.c **** {
 324              		.loc 1 375 0
 325              		@ args = 0, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		@ link register save eliminated.
 328              	.LVL33:
 376:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 377:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 378:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
 379:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_BIT_ACTION(BitVal)); 
 380:stm32lib/src/stm32f10x_gpio.c ****   
 381:stm32lib/src/stm32f10x_gpio.c ****   if (BitVal != Bit_RESET)
 329              		.loc 1 381 0
 330 00e8 0AB1     		cbz	r2, .L27
 382:stm32lib/src/stm32f10x_gpio.c ****   {
 383:stm32lib/src/stm32f10x_gpio.c ****     GPIOx->BSRR = GPIO_Pin;
 331              		.loc 1 383 0
 332 00ea 0161     		str	r1, [r0, #16]
 333 00ec 00E0     		b	.L29
 334              	.L27:
 384:stm32lib/src/stm32f10x_gpio.c ****   }
 385:stm32lib/src/stm32f10x_gpio.c ****   else
 386:stm32lib/src/stm32f10x_gpio.c ****   {
 387:stm32lib/src/stm32f10x_gpio.c ****     GPIOx->BRR = GPIO_Pin;
 335              		.loc 1 387 0
 336 00ee 4161     		str	r1, [r0, #20]
 337              	.L29:
 388:stm32lib/src/stm32f10x_gpio.c ****   }
 389:stm32lib/src/stm32f10x_gpio.c **** }
 338              		.loc 1 389 0
 339 00f0 7047     		bx	lr
 340              	.LFE33:
 342 00f2 00BF     		.align	2
 343              		.global	GPIO_Write
 344              		.thumb
 345              		.thumb_func
 347              	GPIO_Write:
 348              	.LFB34:
 390:stm32lib/src/stm32f10x_gpio.c **** 
 391:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 392:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_Write
 393:stm32lib/src/stm32f10x_gpio.c **** * Description    : Writes data to the specified GPIO data port.
 394:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 395:stm32lib/src/stm32f10x_gpio.c **** *                  - PortVal: specifies the value to be written to the port output
 396:stm32lib/src/stm32f10x_gpio.c **** *                    data register.
 397:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 398:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 399:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 400:stm32lib/src/stm32f10x_gpio.c **** void GPIO_Write(GPIO_TypeDef* GPIOx, u16 PortVal)
 401:stm32lib/src/stm32f10x_gpio.c **** {
 349              		.loc 1 401 0
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353              	.LVL34:
 402:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 403:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 404:stm32lib/src/stm32f10x_gpio.c ****   
 405:stm32lib/src/stm32f10x_gpio.c ****   GPIOx->ODR = PortVal;
 354              		.loc 1 405 0
 355 00f4 C160     		str	r1, [r0, #12]
 406:stm32lib/src/stm32f10x_gpio.c **** }
 356              		.loc 1 406 0
 357 00f6 7047     		bx	lr
 358              	.LFE34:
 360              		.align	2
 361              		.global	GPIO_PinLockConfig
 362              		.thumb
 363              		.thumb_func
 365              	GPIO_PinLockConfig:
 366              	.LFB35:
 407:stm32lib/src/stm32f10x_gpio.c **** 
 408:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 409:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_PinLockConfig
 410:stm32lib/src/stm32f10x_gpio.c **** * Description    : Locks GPIO Pins configuration registers.
 411:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIOx: where x can be (A..G) to select the GPIO peripheral.
 412:stm32lib/src/stm32f10x_gpio.c **** *                  - GPIO_Pin: specifies the port bit to be written.
 413:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be any combination of GPIO_Pin_x where 
 414:stm32lib/src/stm32f10x_gpio.c **** *                    x can be (0..15).
 415:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 416:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 417:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 418:stm32lib/src/stm32f10x_gpio.c **** void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, u16 GPIO_Pin)
 419:stm32lib/src/stm32f10x_gpio.c **** {
 367              		.loc 1 419 0
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL35:
 420:stm32lib/src/stm32f10x_gpio.c ****   u32 tmp = 0x00010000;
 421:stm32lib/src/stm32f10x_gpio.c ****   
 422:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 423:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 424:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN(GPIO_Pin));
 425:stm32lib/src/stm32f10x_gpio.c ****   
 426:stm32lib/src/stm32f10x_gpio.c ****   tmp |= GPIO_Pin;
 372              		.loc 1 426 0
 373 00f8 41F48033 		orr	r3, r1, #65536
 374              	.LVL36:
 427:stm32lib/src/stm32f10x_gpio.c ****   /* Set LCKK bit */
 428:stm32lib/src/stm32f10x_gpio.c ****   GPIOx->LCKR = tmp;
 375              		.loc 1 428 0
 376 00fc 8361     		str	r3, [r0, #24]
 429:stm32lib/src/stm32f10x_gpio.c ****   /* Reset LCKK bit */
 430:stm32lib/src/stm32f10x_gpio.c ****   GPIOx->LCKR =  GPIO_Pin;
 377              		.loc 1 430 0
 378 00fe 8161     		str	r1, [r0, #24]
 431:stm32lib/src/stm32f10x_gpio.c ****   /* Set LCKK bit */
 432:stm32lib/src/stm32f10x_gpio.c ****   GPIOx->LCKR = tmp;
 379              		.loc 1 432 0
 380 0100 8361     		str	r3, [r0, #24]
 433:stm32lib/src/stm32f10x_gpio.c ****   /* Read LCKK bit*/
 434:stm32lib/src/stm32f10x_gpio.c ****   tmp = GPIOx->LCKR;
 381              		.loc 1 434 0
 382 0102 8369     		ldr	r3, [r0, #24]
 383              	.LVL37:
 435:stm32lib/src/stm32f10x_gpio.c ****   /* Read LCKK bit*/
 436:stm32lib/src/stm32f10x_gpio.c ****   tmp = GPIOx->LCKR;
 384              		.loc 1 436 0
 385 0104 8369     		ldr	r3, [r0, #24]
 386              	.LVL38:
 437:stm32lib/src/stm32f10x_gpio.c **** }
 387              		.loc 1 437 0
 388 0106 7047     		bx	lr
 389              	.LFE35:
 391              		.align	2
 392              		.global	GPIO_EventOutputConfig
 393              		.thumb
 394              		.thumb_func
 396              	GPIO_EventOutputConfig:
 397              	.LFB36:
 438:stm32lib/src/stm32f10x_gpio.c **** 
 439:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 440:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_EventOutputConfig
 441:stm32lib/src/stm32f10x_gpio.c **** * Description    : Selects the GPIO pin used as Event output.
 442:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIO_PortSource: selects the GPIO port to be used as source
 443:stm32lib/src/stm32f10x_gpio.c **** *                    for Event output.
 444:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be GPIO_PortSourceGPIOx where x can be
 445:stm32lib/src/stm32f10x_gpio.c **** *                    (A..E).
 446:stm32lib/src/stm32f10x_gpio.c **** *                  - GPIO_PinSource: specifies the pin for the Event output.
 447:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be GPIO_PinSourcex where x can be (0..15).
 448:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 449:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 450:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 451:stm32lib/src/stm32f10x_gpio.c **** void GPIO_EventOutputConfig(u8 GPIO_PortSource, u8 GPIO_PinSource)
 452:stm32lib/src/stm32f10x_gpio.c **** {
 398              		.loc 1 452 0
 399              		@ args = 0, pretend = 0, frame = 0
 400              		@ frame_needed = 0, uses_anonymous_args = 0
 401              	.LVL39:
 402 0108 10B5     		push	{r4, lr}
 403              	.LCFI1:
 453:stm32lib/src/stm32f10x_gpio.c ****   u32 tmpreg = 0x00;
 454:stm32lib/src/stm32f10x_gpio.c **** 
 455:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 456:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_EVENTOUT_PORT_SOURCE(GPIO_PortSource));
 457:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 458:stm32lib/src/stm32f10x_gpio.c ****     
 459:stm32lib/src/stm32f10x_gpio.c ****   tmpreg = AFIO->EVCR;
 404              		.loc 1 459 0
 405 010a 054C     		ldr	r4, .L36
 460:stm32lib/src/stm32f10x_gpio.c ****   /* Clear the PORT[6:4] and PIN[3:0] bits */
 461:stm32lib/src/stm32f10x_gpio.c ****   tmpreg &= EVCR_PORTPINCONFIG_MASK;
 406              		.loc 1 461 0
 407 010c 4FF68073 		movw	r3, #65408
 408              	.LVL40:
 409              		.loc 1 459 0
 410 0110 2268     		ldr	r2, [r4, #0]
 411              	.LVL41:
 462:stm32lib/src/stm32f10x_gpio.c ****   tmpreg |= (u32)GPIO_PortSource << 0x04;
 412              		.loc 1 462 0
 413 0112 41EA0011 		orr	r1, r1, r0, lsl #4
 414              	.LVL42:
 415              		.loc 1 461 0
 416 0116 02EA0303 		and	r3, r2, r3
 417              	.LVL43:
 463:stm32lib/src/stm32f10x_gpio.c ****   tmpreg |= GPIO_PinSource;
 418              		.loc 1 463 0
 419 011a 1943     		orrs	r1, r1, r3
 420              	.LVL44:
 464:stm32lib/src/stm32f10x_gpio.c **** 
 465:stm32lib/src/stm32f10x_gpio.c ****   AFIO->EVCR = tmpreg;
 421              		.loc 1 465 0
 422 011c 2160     		str	r1, [r4, #0]
 466:stm32lib/src/stm32f10x_gpio.c **** }
 423              		.loc 1 466 0
 424 011e 10BD     		pop	{r4, pc}
 425              	.L37:
 426              		.align	2
 427              	.L36:
 428 0120 00000140 		.word	1073807360
 429              	.LFE36:
 431              		.align	2
 432              		.global	GPIO_EventOutputCmd
 433              		.thumb
 434              		.thumb_func
 436              	GPIO_EventOutputCmd:
 437              	.LFB37:
 467:stm32lib/src/stm32f10x_gpio.c **** 
 468:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 469:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_EventOutputCmd
 470:stm32lib/src/stm32f10x_gpio.c **** * Description    : Enables or disables the Event Output.
 471:stm32lib/src/stm32f10x_gpio.c **** * Input          : - NewState: new state of the Event output.
 472:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be: ENABLE or DISABLE.
 473:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 474:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 475:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 476:stm32lib/src/stm32f10x_gpio.c **** void GPIO_EventOutputCmd(FunctionalState NewState)
 477:stm32lib/src/stm32f10x_gpio.c **** {
 438              		.loc 1 477 0
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441              		@ link register save eliminated.
 442              	.LVL45:
 478:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 479:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 480:stm32lib/src/stm32f10x_gpio.c ****   
 481:stm32lib/src/stm32f10x_gpio.c ****   *(vu32 *) EVCR_EVOE_BB = (u32)NewState;
 443              		.loc 1 481 0
 444 0124 014B     		ldr	r3, .L40
 445 0126 1860     		str	r0, [r3, #0]
 482:stm32lib/src/stm32f10x_gpio.c **** }
 446              		.loc 1 482 0
 447 0128 7047     		bx	lr
 448              	.L41:
 449 012a 00BF     		.align	2
 450              	.L40:
 451 012c 1C002042 		.word	1109393436
 452              	.LFE37:
 454              		.align	2
 455              		.global	GPIO_PinRemapConfig
 456              		.thumb
 457              		.thumb_func
 459              	GPIO_PinRemapConfig:
 460              	.LFB38:
 483:stm32lib/src/stm32f10x_gpio.c **** 
 484:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 485:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_PinRemapConfig
 486:stm32lib/src/stm32f10x_gpio.c **** * Description    : Changes the mapping of the specified pin.
 487:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIO_Remap: selects the pin to remap.
 488:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be one of the following values:
 489:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_SPI1
 490:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_I2C1
 491:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_USART1
 492:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_USART2
 493:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_PartialRemap_USART3
 494:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_FullRemap_USART3
 495:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_PartialRemap_TIM1
 496:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_FullRemap_TIM1
 497:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_PartialRemap1_TIM2
 498:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_PartialRemap2_TIM2
 499:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_FullRemap_TIM2
 500:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_PartialRemap_TIM3
 501:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_FullRemap_TIM3
 502:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_TIM4
 503:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap1_CAN
 504:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap2_CAN
 505:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_PD01
 506:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_TIM5CH4_LSI
 507:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_ADC1_ETRGINJ
 508:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_ADC1_ETRGREG
 509:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_ADC2_ETRGINJ
 510:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_ADC2_ETRGREG
 511:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_SWJ_NoJTRST
 512:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_SWJ_JTAGDisable
 513:stm32lib/src/stm32f10x_gpio.c **** *                       - GPIO_Remap_SWJ_Disable
 514:stm32lib/src/stm32f10x_gpio.c **** *                  - NewState: new state of the port pin remapping.
 515:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be: ENABLE or DISABLE.
 516:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 517:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 518:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 519:stm32lib/src/stm32f10x_gpio.c **** void GPIO_PinRemapConfig(u32 GPIO_Remap, FunctionalState NewState)
 520:stm32lib/src/stm32f10x_gpio.c **** {
 461              		.loc 1 520 0
 462              		@ args = 0, pretend = 0, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 0
 464              	.LVL46:
 465 0130 30B5     		push	{r4, r5, lr}
 466              	.LCFI2:
 521:stm32lib/src/stm32f10x_gpio.c ****   u32 tmp = 0x00, tmp1 = 0x00, tmpreg = 0x00, tmpmask = 0x00;
 522:stm32lib/src/stm32f10x_gpio.c **** 
 523:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 524:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_REMAP(GPIO_Remap));
 525:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 526:stm32lib/src/stm32f10x_gpio.c ****   
 527:stm32lib/src/stm32f10x_gpio.c ****   tmpreg = AFIO->MAPR;
 528:stm32lib/src/stm32f10x_gpio.c **** 
 529:stm32lib/src/stm32f10x_gpio.c ****   tmpmask = (GPIO_Remap & DBGAFR_POSITION_MASK) >> 0x10;
 530:stm32lib/src/stm32f10x_gpio.c ****   tmp = GPIO_Remap & LSB_MASK;
 531:stm32lib/src/stm32f10x_gpio.c **** 
 532:stm32lib/src/stm32f10x_gpio.c ****   if ((GPIO_Remap & (DBGAFR_LOCATION_MASK | DBGAFR_NUMBITS_MASK)) == (DBGAFR_LOCATION_MASK | DBGAFR
 467              		.loc 1 532 0
 468 0132 00F44013 		and	r3, r0, #3145728
 469              		.loc 1 527 0
 470 0136 154C     		ldr	r4, .L49
 471              		.loc 1 530 0
 472 0138 4FEA004C 		lsl	ip, r0, #16
 473              	.LVL47:
 474              		.loc 1 532 0
 475 013c B3F5401F 		cmp	r3, #3145728
 476              		.loc 1 520 0
 477 0140 0D46     		mov	r5, r1
 478              		.loc 1 530 0
 479 0142 4FEA1C4C 		lsr	ip, ip, #16
 480              		.loc 1 527 0
 481 0146 6168     		ldr	r1, [r4, #4]
 482              	.LVL48:
 483              		.loc 1 532 0
 484 0148 06D1     		bne	.L43
 533:stm32lib/src/stm32f10x_gpio.c ****   {
 534:stm32lib/src/stm32f10x_gpio.c ****     tmpreg &= DBGAFR_SWJCFG_MASK;
 535:stm32lib/src/stm32f10x_gpio.c ****     AFIO->MAPR &= DBGAFR_SWJCFG_MASK;
 485              		.loc 1 535 0
 486 014a 6368     		ldr	r3, [r4, #4]
 487              		.loc 1 534 0
 488 014c 21F07062 		bic	r2, r1, #251658240
 489              	.LVL49:
 490              		.loc 1 535 0
 491 0150 23F07063 		bic	r3, r3, #251658240
 492 0154 6360     		str	r3, [r4, #4]
 493 0156 0FE0     		b	.L44
 494              	.LVL50:
 495              	.L43:
 536:stm32lib/src/stm32f10x_gpio.c ****   }
 537:stm32lib/src/stm32f10x_gpio.c ****   else if ((GPIO_Remap & DBGAFR_NUMBITS_MASK) == DBGAFR_NUMBITS_MASK)
 496              		.loc 1 537 0
 497 0158 10F4801F 		tst	r0, #1048576
 498 015c 04D0     		beq	.L45
 538:stm32lib/src/stm32f10x_gpio.c ****   {
 539:stm32lib/src/stm32f10x_gpio.c ****     tmp1 = ((u32)0x03) << tmpmask;
 540:stm32lib/src/stm32f10x_gpio.c ****     tmpreg &= ~tmp1;
 499              		.loc 1 540 0
 500 015e C0F30342 		ubfx	r2, r0, #16, #4
 501 0162 0323     		movs	r3, #3
 502 0164 9340     		lsls	r3, r3, r2
 503 0166 03E0     		b	.L48
 504              	.L45:
 541:stm32lib/src/stm32f10x_gpio.c ****     tmpreg |= ~DBGAFR_SWJCFG_MASK;
 542:stm32lib/src/stm32f10x_gpio.c ****   }
 543:stm32lib/src/stm32f10x_gpio.c ****   else
 544:stm32lib/src/stm32f10x_gpio.c ****   {
 545:stm32lib/src/stm32f10x_gpio.c ****     tmpreg &= ~(tmp << ((GPIO_Remap >> 0x15)*0x10));
 505              		.loc 1 545 0
 506 0168 430D     		lsrs	r3, r0, #21
 507 016a 1B01     		lsls	r3, r3, #4
 508 016c 0CFA03F3 		lsl	r3, ip, r3
 509              	.L48:
 510 0170 21EA0303 		bic	r3, r1, r3
 511              	.LVL51:
 546:stm32lib/src/stm32f10x_gpio.c ****     tmpreg |= ~DBGAFR_SWJCFG_MASK;
 512              		.loc 1 546 0
 513 0174 43F07062 		orr	r2, r3, #251658240
 514              	.LVL52:
 515              	.L44:
 547:stm32lib/src/stm32f10x_gpio.c ****   }
 548:stm32lib/src/stm32f10x_gpio.c **** 
 549:stm32lib/src/stm32f10x_gpio.c ****   if (NewState != DISABLE)
 516              		.loc 1 549 0
 517 0178 25B1     		cbz	r5, .L46
 550:stm32lib/src/stm32f10x_gpio.c ****   {
 551:stm32lib/src/stm32f10x_gpio.c ****     tmpreg |= (tmp << ((GPIO_Remap >> 0x15)*0x10));
 518              		.loc 1 551 0
 519 017a 430D     		lsrs	r3, r0, #21
 520 017c 1B01     		lsls	r3, r3, #4
 521 017e 0CFA03F3 		lsl	r3, ip, r3
 522 0182 1A43     		orrs	r2, r2, r3
 523              	.L46:
 552:stm32lib/src/stm32f10x_gpio.c ****   }
 553:stm32lib/src/stm32f10x_gpio.c **** 
 554:stm32lib/src/stm32f10x_gpio.c ****   AFIO->MAPR = tmpreg;
 524              		.loc 1 554 0
 525 0184 014B     		ldr	r3, .L49
 526 0186 5A60     		str	r2, [r3, #4]
 555:stm32lib/src/stm32f10x_gpio.c **** }
 527              		.loc 1 555 0
 528 0188 30BD     		pop	{r4, r5, pc}
 529              	.L50:
 530 018a 00BF     		.align	2
 531              	.L49:
 532 018c 00000140 		.word	1073807360
 533              	.LFE38:
 535              		.align	2
 536              		.global	GPIO_EXTILineConfig
 537              		.thumb
 538              		.thumb_func
 540              	GPIO_EXTILineConfig:
 541              	.LFB39:
 556:stm32lib/src/stm32f10x_gpio.c **** 
 557:stm32lib/src/stm32f10x_gpio.c **** /*******************************************************************************
 558:stm32lib/src/stm32f10x_gpio.c **** * Function Name  : GPIO_EXTILineConfig
 559:stm32lib/src/stm32f10x_gpio.c **** * Description    : Selects the GPIO pin used as EXTI Line.
 560:stm32lib/src/stm32f10x_gpio.c **** * Input          : - GPIO_PortSource: selects the GPIO port to be used as
 561:stm32lib/src/stm32f10x_gpio.c **** *                    source for EXTI lines.
 562:stm32lib/src/stm32f10x_gpio.c **** *                    This parameter can be GPIO_PortSourceGPIOx where x can be
 563:stm32lib/src/stm32f10x_gpio.c **** *                    (A..G).
 564:stm32lib/src/stm32f10x_gpio.c **** *                  - GPIO_PinSource: specifies the EXTI line to be configured.
 565:stm32lib/src/stm32f10x_gpio.c **** *                   This parameter can be GPIO_PinSourcex where x can be (0..15).
 566:stm32lib/src/stm32f10x_gpio.c **** * Output         : None
 567:stm32lib/src/stm32f10x_gpio.c **** * Return         : None
 568:stm32lib/src/stm32f10x_gpio.c **** *******************************************************************************/
 569:stm32lib/src/stm32f10x_gpio.c **** void GPIO_EXTILineConfig(u8 GPIO_PortSource, u8 GPIO_PinSource)
 570:stm32lib/src/stm32f10x_gpio.c **** {
 542              		.loc 1 570 0
 543              		@ args = 0, pretend = 0, frame = 0
 544              		@ frame_needed = 0, uses_anonymous_args = 0
 545              	.LVL53:
 546 0190 30B5     		push	{r4, r5, lr}
 547              	.LCFI3:
 571:stm32lib/src/stm32f10x_gpio.c ****   u32 tmp = 0x00;
 572:stm32lib/src/stm32f10x_gpio.c **** 
 573:stm32lib/src/stm32f10x_gpio.c ****   /* Check the parameters */
 574:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_EXTI_PORT_SOURCE(GPIO_PortSource));
 575:stm32lib/src/stm32f10x_gpio.c ****   assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
 576:stm32lib/src/stm32f10x_gpio.c ****   
 577:stm32lib/src/stm32f10x_gpio.c ****   tmp = ((u32)0x0F) << (0x04 * (GPIO_PinSource & (u8)0x03));
 548              		.loc 1 577 0
 549 0192 01F00305 		and	r5, r1, #3
 550 0196 AD00     		lsls	r5, r5, #2
 578:stm32lib/src/stm32f10x_gpio.c **** 
 579:stm32lib/src/stm32f10x_gpio.c ****   AFIO->EXTICR[GPIO_PinSource >> 0x02] &= ~tmp;
 551              		.loc 1 579 0
 552 0198 0F23     		movs	r3, #15
 553 019a AB40     		lsls	r3, r3, r5
 580:stm32lib/src/stm32f10x_gpio.c ****   AFIO->EXTICR[GPIO_PinSource >> 0x02] |= (((u32)GPIO_PortSource) << (0x04 * (GPIO_PinSource & (u8)
 554              		.loc 1 580 0
 555 019c A840     		lsls	r0, r0, r5
 556              	.LVL54:
 557              		.loc 1 579 0
 558 019e 074C     		ldr	r4, .L53
 559 01a0 8908     		lsrs	r1, r1, #2
 560              	.LVL55:
 561 01a2 0231     		adds	r1, r1, #2
 562 01a4 54F82120 		ldr	r2, [r4, r1, lsl #2]
 563 01a8 22EA0302 		bic	r2, r2, r3
 564 01ac 44F82120 		str	r2, [r4, r1, lsl #2]
 565              		.loc 1 580 0
 566 01b0 54F82130 		ldr	r3, [r4, r1, lsl #2]
 567 01b4 1843     		orrs	r0, r0, r3
 568 01b6 44F82100 		str	r0, [r4, r1, lsl #2]
 581:stm32lib/src/stm32f10x_gpio.c **** }
 569              		.loc 1 581 0
 570 01ba 30BD     		pop	{r4, r5, pc}
 571              	.L54:
 572              		.align	2
 573              	.L53:
 574 01bc 00000140 		.word	1073807360
 575              	.LFE39:
 577              		.align	2
 578              		.global	GPIO_AFIODeInit
 579              		.thumb
 580              		.thumb_func
 582              	GPIO_AFIODeInit:
 583              	.LFB24:
 584              		.loc 1 108 0
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587              		.loc 1 109 0
 588 01c0 0120     		movs	r0, #1
 589 01c2 0146     		mov	r1, r0
 590              		.loc 1 108 0
 591 01c4 10B5     		push	{r4, lr}
 592              	.LCFI4:
 593              		.loc 1 109 0
 594 01c6 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 595              		.loc 1 110 0
 596 01ca 0120     		movs	r0, #1
 597 01cc 0021     		movs	r1, #0
 598 01ce FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 599              		.loc 1 111 0
 600 01d2 10BD     		pop	{r4, pc}
 601              	.LFE24:
 603              		.align	2
 604              		.global	GPIO_DeInit
 605              		.thumb
 606              		.thumb_func
 608              	GPIO_DeInit:
 609              	.LFB23:
 610              		.loc 1 52 0
 611              		@ args = 0, pretend = 0, frame = 8
 612              		@ frame_needed = 0, uses_anonymous_args = 0
 613              	.LVL56:
 614 01d4 07B5     		push	{r0, r1, r2, lr}
 615              	.LCFI5:
 616              	.LVL57:
 617              		.loc 1 56 0
 618 01d6 264B     		ldr	r3, .L71
 619              		.loc 1 52 0
 620 01d8 0190     		str	r0, [sp, #4]
 621              	.LVL58:
 622              		.loc 1 56 0
 623 01da 9842     		cmp	r0, r3
 624              	.LVL59:
 625 01dc 2BD0     		beq	.L62
 626 01de 0CD8     		bhi	.L66
 627 01e0 A3F50063 		sub	r3, r3, #2048
 628 01e4 9842     		cmp	r0, r3
 629 01e6 1AD0     		beq	.L60
 630 01e8 03F58063 		add	r3, r3, #1024
 631 01ec 9842     		cmp	r0, r3
 632 01ee 1CD0     		beq	.L61
 633 01f0 A3F50063 		sub	r3, r3, #2048
 634 01f4 9842     		cmp	r0, r3
 635 01f6 3AD1     		bne	.L67
 636 01f8 0BE0     		b	.L69
 637              	.L66:
 638 01fa 1E4B     		ldr	r3, .L71+4
 639 01fc 9842     		cmp	r0, r3
 640 01fe 26D0     		beq	.L64
 641 0200 03F58063 		add	r3, r3, #1024
 642 0204 9842     		cmp	r0, r3
 643 0206 28D0     		beq	.L65
 644 0208 A3F50063 		sub	r3, r3, #2048
 645 020c 9842     		cmp	r0, r3
 646 020e 2ED1     		bne	.L67
 647 0210 17E0     		b	.L70
 648              	.L69:
 649              		.loc 1 59 0
 650 0212 0420     		movs	r0, #4
 651 0214 0121     		movs	r1, #1
 652 0216 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 653              		.loc 1 60 0
 654 021a 0420     		movs	r0, #4
 655 021c 24E0     		b	.L68
 656              	.L60:
 657              		.loc 1 64 0
 658 021e 0820     		movs	r0, #8
 659 0220 0121     		movs	r1, #1
 660 0222 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 661              		.loc 1 65 0
 662 0226 0820     		movs	r0, #8
 663 0228 1EE0     		b	.L68
 664              	.L61:
 665              		.loc 1 69 0
 666 022a 1020     		movs	r0, #16
 667 022c 0121     		movs	r1, #1
 668 022e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 669              		.loc 1 70 0
 670 0232 1020     		movs	r0, #16
 671 0234 18E0     		b	.L68
 672              	.L62:
 673              		.loc 1 74 0
 674 0236 2020     		movs	r0, #32
 675 0238 0121     		movs	r1, #1
 676 023a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 677              		.loc 1 75 0
 678 023e 2020     		movs	r0, #32
 679 0240 12E0     		b	.L68
 680              	.L70:
 681              		.loc 1 79 0
 682 0242 4020     		movs	r0, #64
 683 0244 0121     		movs	r1, #1
 684 0246 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 685              		.loc 1 80 0
 686 024a 4020     		movs	r0, #64
 687 024c 0CE0     		b	.L68
 688              	.L64:
 689              		.loc 1 84 0
 690 024e 8020     		movs	r0, #128
 691 0250 0121     		movs	r1, #1
 692 0252 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 693              		.loc 1 85 0
 694 0256 8020     		movs	r0, #128
 695 0258 06E0     		b	.L68
 696              	.L65:
 697              		.loc 1 89 0
 698 025a 4FF48070 		mov	r0, #256
 699 025e 0121     		movs	r1, #1
 700 0260 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 701              		.loc 1 90 0
 702 0264 4FF48070 		mov	r0, #256
 703              	.L68:
 704 0268 0021     		movs	r1, #0
 705 026a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 706              	.L67:
 707              		.loc 1 96 0
 708 026e 0EBD     		pop	{r1, r2, r3, pc}
 709              	.L72:
 710              		.align	2
 711              	.L71:
 712 0270 00140140 		.word	1073812480
 713 0274 001C0140 		.word	1073814528
 714              	.LFE23:
 930              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f10x_gpio.c
     /tmp/ccT67nMl.s:22     .text:00000000 $t
     /tmp/ccT67nMl.s:27     .text:00000000 GPIO_Init
     /tmp/ccT67nMl.s:175    .text:000000a8 GPIO_StructInit
     /tmp/ccT67nMl.s:200    .text:000000b8 GPIO_ReadInputDataBit
     /tmp/ccT67nMl.s:223    .text:000000c4 GPIO_ReadInputData
     /tmp/ccT67nMl.s:243    .text:000000cc GPIO_ReadOutputDataBit
     /tmp/ccT67nMl.s:266    .text:000000d8 GPIO_ReadOutputData
     /tmp/ccT67nMl.s:286    .text:000000e0 GPIO_SetBits
     /tmp/ccT67nMl.s:304    .text:000000e4 GPIO_ResetBits
     /tmp/ccT67nMl.s:322    .text:000000e8 GPIO_WriteBit
     /tmp/ccT67nMl.s:347    .text:000000f4 GPIO_Write
     /tmp/ccT67nMl.s:365    .text:000000f8 GPIO_PinLockConfig
     /tmp/ccT67nMl.s:396    .text:00000108 GPIO_EventOutputConfig
     /tmp/ccT67nMl.s:428    .text:00000120 $d
     /tmp/ccT67nMl.s:431    .text:00000124 $t
     /tmp/ccT67nMl.s:436    .text:00000124 GPIO_EventOutputCmd
     /tmp/ccT67nMl.s:451    .text:0000012c $d
     /tmp/ccT67nMl.s:454    .text:00000130 $t
     /tmp/ccT67nMl.s:459    .text:00000130 GPIO_PinRemapConfig
     /tmp/ccT67nMl.s:532    .text:0000018c $d
     /tmp/ccT67nMl.s:535    .text:00000190 $t
     /tmp/ccT67nMl.s:540    .text:00000190 GPIO_EXTILineConfig
     /tmp/ccT67nMl.s:574    .text:000001bc $d
     /tmp/ccT67nMl.s:577    .text:000001c0 $t
     /tmp/ccT67nMl.s:582    .text:000001c0 GPIO_AFIODeInit
     /tmp/ccT67nMl.s:608    .text:000001d4 GPIO_DeInit
     /tmp/ccT67nMl.s:712    .text:00000270 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
